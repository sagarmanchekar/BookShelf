Sass --watch style //to convert scss into css

style.scss

$theme-color:red;   //declare variable then use this variable at other places
$p-margin-style: 20px; //use this variable to give margin

*******************
**NESTING CSS **

//without nesting 
main{
background-color:blue;
}
 
main p{
color:yellow;
}
article{
background-color:yellow;
}
main article p{
color:green;
}


//with nesting
main{
	background-color:blue;
	p{
	color:yellow;
	article{
		background-color:yellow;
		p	{
			color:green;
			}
		}
	}
}


*****************************************

Partials
-when we have to write css in other file and just import it in 
	our scss.
	-Always use _underscore in naming paartials so sass doesnot creates css file.
	
	
	eg 
	_header.scss
	
	header{background-color:blue;}
	
	style.scss
	@import "_header";  //this automatically adds code for header in css file
							doesnot require another trip of http
*we can even override the attributes

	header{
	background-color:red;
	}	



*
***************************************************

**Mixins** u can store whole collection of attributes other than variable which stores only 1 value


style.scss
@mixin fancy-border{
	border:1px dashed black;
	border-radius:5px;
}

header{
	@include fancy-border;
	background-color:yellow;
}

***passing values in mixins***

@mixin fancy-border($size:1px,$color:black)   //default values if not pass anything  $size and $color are variables.
{
	border:$size dashed $color;
	border-radius:5px;
}


header{
	@include fancy-border(10px,blue);
	background-color:yellow;
}

**************************************************

***Extend and Inheritance***

similar to mixin but cannot pass the values in argunent and we here are actually inheriting from class.

.message{
	font-size:20px;
	border:1 px solid black;
}

.warning{
	@extend .message;
	color:red;
}

.error{
	@extend .message;
	color:red;
}

********************************

Operators

style.scss

	$base-size:20px;
	$base-color:red;

	p{
		font-size:$base-size;
		color:$base-color;
	}

	button{
		font-size:$base-size * 2;
		background-color:$base-color -200;   //- means darker + means lighter.
	}


*************************************

Conditional Statement

style.scss

@mixin text-style($size){
font-size:$size;

	@if $size>20px{
		color:blue;
	}

	@elseif  size == 20 px{
	color:red;
	}

	@else {
	color:green;
	}

}

header{
@include text-style(20px);
}



